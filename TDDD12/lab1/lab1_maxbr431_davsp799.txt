LAB 1: Maximilian Bragazzi IhrÃ©n (maxbr431) & David Spove (davsp799)

1) List all employees:
mysql> SELECT * FROM jbemployee;
+------+--------------------+--------+---------+-----------+-----------+
| id   | name               | salary | manager | birthyear | startyear |
+------+--------------------+--------+---------+-----------+-----------+
|   10 | Ross, Stanley      |  15908 |     199 |      1927 |      1945 |
|   11 | Ross, Stuart       |  12067 |    NULL |      1931 |      1932 |
|   13 | Edwards, Peter     |   9000 |     199 |      1928 |      1958 |
|   26 | Thompson, Bob      |  13000 |     199 |      1930 |      1970 |
|   32 | Smythe, Carol      |   9050 |     199 |      1929 |      1967 |
|   33 | Hayes, Evelyn      |  10100 |     199 |      1931 |      1963 |
|   35 | Evans, Michael     |   5000 |      32 |      1952 |      1974 |
|   37 | Raveen, Lemont     |  11985 |      26 |      1950 |      1974 |
|   55 | James, Mary        |  12000 |     199 |      1920 |      1969 |
|   98 | Williams, Judy     |   9000 |     199 |      1935 |      1969 |
|  129 | Thomas, Tom        |  10000 |     199 |      1941 |      1962 |
|  157 | Jones, Tim         |  12000 |     199 |      1940 |      1960 |
|  199 | Bullock, J.D.      |  27000 |    NULL |      1920 |      1920 |
|  215 | Collins, Joanne    |   7000 |      10 |      1950 |      1971 |
|  430 | Brunet, Paul C.    |  17674 |     129 |      1938 |      1959 |
|  843 | Schmidt, Herman    |  11204 |      26 |      1936 |      1956 |
|  994 | Iwano, Masahiro    |  15641 |     129 |      1944 |      1970 |
| 1110 | Smith, Paul        |   6000 |      33 |      1952 |      1973 |
| 1330 | Onstad, Richard    |   8779 |      13 |      1952 |      1971 |
| 1523 | Zugnoni, Arthur A. |  19868 |     129 |      1928 |      1949 |
| 1639 | Choy, Wanda        |  11160 |      55 |      1947 |      1970 |
| 2398 | Wallace, Maggie J. |   7880 |      26 |      1940 |      1959 |
| 4901 | Bailey, Chas M.    |   8377 |      32 |      1956 |      1975 |
| 5119 | Bono, Sonny        |  13621 |      55 |      1939 |      1963 |
| 5219 | Schwarz, Jason B.  |  13374 |      33 |      1944 |      1959 |
+------+--------------------+--------+---------+-----------+-----------+
25 rows in set (0.00 sec)

2) List all departments in alphabetical order:
mysql> SELECT name FROM jbdept ORDER BY name;
+------------------+
| name             |
+------------------+
| Bargain          |
| Book             |
| Candy            |
| Children's       |
| Children's       |
| Furniture        |
| Giftwrap         |
| Jewelry          |
| Junior Miss      |
| Junior's         |
| Linens           |
| Major Appliances |
| Men's            |
| Sportswear       |
| Stationary       |
| Toys             |
| Women's          |
| Women's          |
| Women's          |
+------------------+
19 rows in set (0.00 sec)

3) What parts are not in store:
mysql> SELECT * FROM jbparts WHERE qoh = 0;
+----+-------------------+-------+--------+------+
| id | name              | color | weight | qoh  |
+----+-------------------+-------+--------+------+
| 11 | card reader       | gray  |    327 |    0 |
| 12 | card punch        | gray  |    427 |    0 |
| 13 | paper tape reader | black |    107 |    0 |
| 14 | paper tape punch  | black |    147 |    0 |
+----+-------------------+-------+--------+------+
4 rows in set (0.00 sec)

4) Employees with salary 9000 <= x <= 10000:
mysql> SELECT * FROM jbemployee WHERE salary >= 9000 AND salary <= 10000;
+-----+----------------+--------+---------+-----------+-----------+
| id  | name           | salary | manager | birthyear | startyear |
+-----+----------------+--------+---------+-----------+-----------+
|  13 | Edwards, Peter |   9000 |     199 |      1928 |      1958 |
|  32 | Smythe, Carol  |   9050 |     199 |      1929 |      1967 |
|  98 | Williams, Judy |   9000 |     199 |      1935 |      1969 |
| 129 | Thomas, Tom    |  10000 |     199 |      1941 |      1962 |
+-----+----------------+--------+---------+-----------+-----------+
4 rows in set (0.00 sec)

5) Employee age when started:
mysql> SELECT name, (startyear - birthyear) AS 'age' FROM jbemployee ORDER BY age;
+--------------------+------+
| name               | age  |
+--------------------+------+
| Bullock, J.D.      |    0 |
| Ross, Stuart       |    1 |
| Schwarz, Jason B.  |   15 |
| Ross, Stanley      |   18 |
| Bailey, Chas M.    |   19 |
| Wallace, Maggie J. |   19 |
| Onstad, Richard    |   19 |
| Jones, Tim         |   20 |
| Schmidt, Herman    |   20 |
| Brunet, Paul C.    |   21 |
| Smith, Paul        |   21 |
| Zugnoni, Arthur A. |   21 |
| Collins, Joanne    |   21 |
| Thomas, Tom        |   21 |
| Evans, Michael     |   22 |
| Choy, Wanda        |   23 |
| Bono, Sonny        |   24 |
| Raveen, Lemont     |   24 |
| Iwano, Masahiro    |   26 |
| Edwards, Peter     |   30 |
| Hayes, Evelyn      |   32 |
| Williams, Judy     |   34 |
| Smythe, Carol      |   38 |
| Thompson, Bob      |   40 |
| James, Mary        |   49 |
+--------------------+------+
25 rows in set (0.00 sec)

6) Employees with last names ending in "son":
mysql> SELECT * FROM jbemployee WHERE name LIKE '%son, %';
+----+---------------+--------+---------+-----------+-----------+
| id | name          | salary | manager | birthyear | startyear |
+----+---------------+--------+---------+-----------+-----------+
| 26 | Thompson, Bob |  13000 |     199 |      1930 |      1970 |
+----+---------------+--------+---------+-----------+-----------+
1 row in set (0.01 sec)

7) Items delivered by 'Fisher-Price' (subquery):
mysql> SELECT * FROM jbitem WHERE supplier IN (SELECT id FROM jbsupplier WHERE name = 'Fisher-Price');
+-----+-----------------+------+-------+------+----------+
| id  | name            | dept | price | qoh  | supplier |
+-----+-----------------+------+-------+------+----------+
|  43 | Maze            |   49 |   325 |  200 |       89 |
| 107 | The 'Feel' Book |   35 |   225 |  225 |       89 |
| 119 | Squeeze Ball    |   49 |   250 |  400 |       89 |
+-----+-----------------+------+-------+------+----------+
3 rows in set (0.01 sec)

8) Items delivered by 'Fisher-Price' (no subquery):
mysql> SELECT I.* FROM jbitem I, jbsupplier S WHERE I.supplier = S.id AND S.name = 'Fisher-Price';
+-----+-----------------+------+-------+------+----------+
| id  | name            | dept | price | qoh  | supplier |
+-----+-----------------+------+-------+------+----------+
|  43 | Maze            |   49 |   325 |  200 |       89 |
| 107 | The 'Feel' Book |   35 |   225 |  225 |       89 |
| 119 | Squeeze Ball    |   49 |   250 |  400 |       89 |
+-----+-----------------+------+-------+------+----------+
3 rows in set (0.00 sec)

9) All cities with suppliers:
mysql> SELECT * FROM jbcity WHERE id IN (SELECT city FROM jbsupplier);
+-----+----------------+-------+
| id  | name           | state |
+-----+----------------+-------+
|  10 | Amherst        | Mass  |
|  21 | Boston         | Mass  |
| 100 | New York       | NY    |
| 106 | White Plains   | Neb   |
| 118 | Hickville      | Okla  |
| 303 | Atlanta        | Ga    |
| 537 | Madison        | Wisc  |
| 609 | Paxton         | Ill   |
| 752 | Dallas         | Tex   |
| 802 | Denver         | Colo  |
| 841 | Salt Lake City | Utah  |
| 900 | Los Angeles    | Calif |
| 921 | San Diego      | Calif |
| 941 | San Francisco  | Calif |
| 981 | Seattle        | Wash  |
+-----+----------------+-------+
15 rows in set (0.01 sec)

10) Name + color of parts heavier than card reader (subquery):
mysql> SELECT name, color FROM jbparts WHERE weight > (SELECT weight FROM jbparts WHERE name = 'card reader');
+--------------+--------+
| name         | color  |
+--------------+--------+
| disk drive   | black  |
| tape drive   | black  |
| line printer | yellow |
| card punch   | gray   |
+--------------+--------+
4 rows in set (0.00 sec)

11) Name + color of parts heavier than card reader (no subquery):
mysql> SELECT P.name, P.color FROM jbparts P, jbparts Q WHERE P.weight > Q.weight AND Q.name = 'card reader';
+--------------+--------+
| name         | color  |
+--------------+--------+
| disk drive   | black  |
| tape drive   | black  |
| line printer | yellow |
| card punch   | gray   |
+--------------+--------+
4 rows in set (0.00 sec)

12) Average weight of black parts:
mysql> SELECT AVG(weight) FROM jbparts WHERE color = 'black';
+-------------+
| AVG(weight) |
+-------------+
|    347.2500 |
+-------------+
1 row in set (0.00 sec)

13) Total weight of parts each supplier in Massachusetts delivered:
mysql> SELECT
    ->    supplier.name AS 'Supplier Name',
    ->    SUM(parts.weight * supply.quan) AS 'Total Weight'
    -> FROM
    ->    jbsupply AS supply
    ->       JOIN
    ->          jbparts AS parts
    ->       ON
    ->          supply.part = parts.id
    ->             JOIN
    ->                jbsupplier AS supplier
    ->             ON
    ->                supply.supplier = supplier.id
    ->                   JOIN
    ->                      jbcity AS city
    ->                   ON
    ->                      supplier.city = city.id
    ->                      AND
    ->                      city.state = 'Mass'
    -> GROUP BY
    ->    supplier.name
    -> ;
+---------------+--------------+
| Supplier Name | Total Weight |
+---------------+--------------+
| DEC           |         3120 |
| Fisher-Price  |      1135000 |
+---------------+--------------+
2 rows in set (0.01 sec)

14) Create table similar to items, fill with less than average cost items:
mysql> CREATE TABLE less_than_average_items(id int, name varchar(20), dept int, price int, qoh int, supplier int, PRIMARY KEY (id), FOREIGN KEY (supplier) REFERENCES jbsupplier(id));
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO less_than_average_items (SELECT * FROM jbitem HAVING price < AVG(price));
Query OK, 1 row affected (0.00 sec)
Records: 1  Duplicates: 0  Warnings: 0

15) Create view containing items with less than average costs:
mysql> CREATE VIEW less_than_average AS SELECT * FROM jbitem HAVING price < AVG(price);
Query OK, 0 rows affected (0.01 sec)

16) Difference between table and view:
A table is static, which means the data isn't changed depending on where it got it's data.
A view is dynamic, meaning that if I get the data from Table1, and I update it, the view also updates.

17) Create view that calculates total cost of debits:
mysql> CREATE VIEW debit_cost(debit, totcost) AS SELECT S.debit, (S.item * S.quantity * I.price) FROM jbsale S, jbitem I GROUP BY S.debit;
Query OK, 0 rows affected (0.00 sec)

18) Create view that calculates total cost of debits:
mysql> CREATE VIEW debit_cost(debit, totcost) AS SELECT S.debit, (S.item * S.quantity * I.price) FROM jbsale S, jbitem I GROUP BY S.debit;
Query OK, 0 rows affected (0.00 sec)

19 a) Remove all LA suppliers, and any references to them:
mysql> DELETE FROM jbsale WHERE item IN (SELECT id FROM jbitem WHERE supplier IN (SELECT id FROM jbsupplier WHERE city IN (SELECT id FROM jbcity WHERE name = 'Los Angeles')));
Query OK, 1 row affected (0.01 sec)

mysql> DELETE FROM jbitem WHERE supplier IN (SELECT S.id FROM jbsupplier S, jbcity C  WHERE S.city = C.id AND C.name = 'Los Angeles');
Query OK, 2 rows affected (0.00 sec)

mysql> DELETE FROM jbsupplier WHERE city IN (SELECT id FROM jbcity WHERE name = 'Los Angeles');
Query OK, 1 row affected (0.01 sec)

19 b) Explanation for above:
We tried deleting all LA-entries, and found dependecies in "jbitems", so we tried deleting LA-dependecies there, and found dependencies in "jbsale", so we deleted all LA-dependencies there and succeded, afterwards we redid all the other commands in reverse order.

20) Create view that shows which suppliers have delivered items, and how many have been sold:
mysql> CREATE VIEW jbsale_supply(supplier, item, sold_amount) AS SELECT jbsupplier.name, jbitem.name, jbsale.quantity FROM jbsupplier, jbitem, jbsale WHERE jbsupplier.id = jbitem.supplier;
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT supplier, sum(sold_amount) AS sum FROM jbsale_supply GROUP BY supplier;
+--------------+------+
| supplier     | sum  |
+--------------+------+
| Cannon       |   60 |
| Fisher-Price |   45 |
| Levi-Strauss |   60 |
| Playskool    |   30 |
| White Stag   |   45 |
| Whitman's    |   30 |
+--------------+------+
6 rows in set (0.00 sec)
