(define (domain shakey)
  (:requirements :strips)

  (:predicates
               ;; Objects
               (shakey ?shakey)
               (room ?room)
               (box ?box)
               (small-object ?obj)
               (lightswich ?switch)
               (door ?door)
               (hand ?hand)

               ;; Object variables
               (is-holding ?hand)
               (is-pressed ?switch)
               (is-wide ?door)
               (standing-on-box ?shakey)
               
               ;; Object correlations
               (in ?room ?obj)
               (holding ?hand ?obj)
               (connected ?room1 ?room2 ?door)
               (standing-on ?shakey ?box)
  )

  (:action change_room ;; Shakey moves to a connected room
    :parameters (?shakey ?room1 ?room2 ?door)
    :precondition (and (shakey ?shakey)
                       (connected ?room1 ?room2 ?door)
                       (in ?room1 ?shakey))
    :effect (and (not (in ?room1 ?shakey)
                 (in ?room2 ?shakey))
  )

  (:action pick_up ;; Pick up a small object in the same room as Shakey if room is lit
    :parameters (?shakey ?obj ?room ?hand ?switch)
    :precondition (and (shakey ?shakey)
                       (small-object ?obj)
                       (lightswitch ?switch)
                       (hand ?hand)
                       (room ?room)
                       (in ?room ?shakey)
                       (in ?room ?obj)
                       (in ?room ?switch)
                       (not (is-holding ?hand))
                       (is-pressed ?switch))
    :effect (and (is-holding ?hand)
                 (holding ?hand ?obj)
                 (not (in ?room ?obj)))
  )

  (:action drop ;; Drop an held item in the room Shakey is in
    :parameters (?shakey ?room ?hand ?obj)
    :precondition (and (shakey ?shakey)
                       (room ?room)
                       (hand ?hand)
                       (small-object ?obj)
                       (in ?room ?shakey)
                       (holding ?hand ?obj))
    :effect (and (in ?room ?obj)
                 (not (holding ?hand ?obj))
                 (not (is-holding ?hand)))
  )

  (:action push ;; Push a box in this room to a connected room
    :parameters (?shakey ?room1 ?door ?room2 ?box)
    :precondition (and (shakey ?shakey)
                       (room ?room1)
                       (room ?room2)
                       (door ?door)
                       (box ?box)
                       (connected ?room1 ?room2 ?door)
                       (is-wide ?door)
                       (in ?room1 ?shakey)
                       (in ?room1 ?box))
    :effect (and (not (in ?room1 ?box))
                 (in ?room2 ?box)
                 (not (in ?room1 ?shakey))
                 (in ?room2 ?shakey))
  )

  (:action climb ;; Get on top of a box in the same room
    :parameters (?shakey ?room ?box)
    :precondition (and (shakey ?shakey)
                       (room ?room)
                       (box ?box)
                       (in ?room ?box)
                       (in ?room ?shakey)
                       (not (standing-on-box ?shakey)))
    :effect (and (standing-on-box ?shakey)
                 (standing-on ?shakey ?box))
  )

  (:action descend ;; Get down from a box in the same room
    :parameters (?shakey ?room ?box)
    :precondition (and (shakey ?shakey)
                       (room ?room)
                       (box ?box)
                       (in ?room ?box)
                       (in ?room ?shakey)
                       (standing-on ?shakey ?box))
    :effect (and (not (standing-on-box ?shakey))
                 (not (standing-on ?shakey ?box)))
  )

  (:action press ;; Flick a lightswitch in the same room
    :parameters (?shakey ?switch ?room)
    :precondition (and (shakey ?shakey)
                       (lightswitch ?switch)
                       (room ?room)
                       (in ?room ?shakey)
                       (in ?room ?switch)
                       (not (is-pressed ?switch))
                       (standing-on-box ?shakey))
    :effect (and (is-pressed ?switch))
  )
)